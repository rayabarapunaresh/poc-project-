AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD pipeline for GitHub projects
Parameters:
  CodeDeployServiceRole:
    Type: String
    Description: A service role ARN granting CodeDeploy permission to make calls to EC2 instances with CodeDeploy agent installed.
Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  CodeBuildServiceRole:
   Type: AWS::IAM::Role
   Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: "logs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - logs:CreateLogGroup
                      - logs:CreateLogStream
                      - logs:PutLogEvents
                      - ecr:GetAuthorizationToken
                      - ssm:GetParameters
                  Resource: "*"

        - PolicyName: "cloudformation"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - 'cloudformation:*'
                  Resource: "*"          
        - PolicyName: "S3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - s3:GetObject
                      - s3:PutObject
                      - s3:GetObjectVersion
                  Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
  CodePipelineServiceRole:
   Type: 'AWS::IAM::Role'
   Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
             Service:
               - codepipeline.amazonaws.com
               - cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'

      Policies:
        - PolicyName: root
          PolicyDocument:
            Statement:
              - Action:
                 - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                     - cloudformation.amazonaws.com
                     - elasticbeanstalk.amazonaws.com
                     - ec2.amazonaws.com
                     - ecs-tasks.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'codedeploy:CreateDeployment'
                 - 'codedeploy:GetApplication'
                 - 'codedeploy:GetApplicationRevision'
                 - 'codedeploy:GetDeployment'
                 - 'codedeploy:GetDeploymentConfig'
                 - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codestar-connections:UseConnection'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'elasticbeanstalk:*'
                 - 'ec2:*'
                 - 'elasticloadbalancing:*'
                 - 'autoscaling:*'
                 - 'cloudwatch:*'
                 - 's3:*'
                 - 'sns:*'
                 - 'cloudformation:*'
                 - 'rds:*'
                 - 'sqs:*'
                 - 'ecs:*'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'lambda:InvokeFunction'
                 - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'opsworks:CreateDeployment'
                 - 'opsworks:DescribeApps'
                 - 'opsworks:DescribeCommands'
                 - 'opsworks:DescribeDeployments'
                 - 'opsworks:DescribeInstances'
                 - 'opsworks:DescribeStacks'
                 - 'opsworks:UpdateApp'
                 - 'opsworks:UpdateStack'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'cloudformation:CreateStack'
                 - 'cloudformation:DeleteStack'
                 - 'cloudformation:DescribeStacks'
                 - 'cloudformation:UpdateStack'
                 - 'cloudformation:CreateChangeSet'
                 - 'cloudformation:DeleteChangeSet'
                 - 'cloudformation:DescribeChangeSet'
                 - 'cloudformation:ExecuteChangeSet'
                 - 'cloudformation:SetStackPolicy'
                 - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                 - 'codebuild:BatchGetBuilds'
                 - 'codebuild:StartBuild'
                 - 'codebuild:BatchGetBuildBatches'
                 - 'codebuild:StartBuildBatch'
                Resource: '*'
                Effect: Allow
          
              - Action:
                 - 'devicefarm:ListProjects'
                 - 'devicefarm:ListDevicePools'
                 - 'devicefarm:GetRun'
                 - 'devicefarm:GetUpload'
                 - 'devicefarm:CreateUpload'
                 - 'devicefarm:ScheduleRun'
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                 - 'servicecatalog:ListProvisioningArtifacts'
                 - 'servicecatalog:CreateProvisioningArtifact'
                 - 'servicecatalog:DescribeProvisioningArtifact'
                 - 'servicecatalog:DeleteProvisioningArtifact'
                 - 'servicecatalog:UpdateProduct'
                Resource: '*'
              - Effect: Allow
                Action:
                 - 'cloudformation:ValidateTemplate'
                Resource: '*'
              - Effect: Allow
                Action:
                 - 'ecr:DescribeImages'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'states:DescribeExecution'
                  - 'states:DescribeStateMachine'
                  - 'states:StartExecution'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'appconfig:StartDeployment'
                  - 'appconfig:StopDeployment'
                  - 'appconfig:GetDeployment'
                Resource: '*'
     
                 

  CodeBuildProject:
   Type: AWS::CodeBuild::Project
   Properties:
    Name: myProjectName
    Description: A description about my project
    ServiceRole: !Ref CodeBuildServiceRole
    Artifacts:
     Type: CODEPIPELINE
    Environment:
     Type: LINUX_CONTAINER
     ComputeType: BUILD_GENERAL1_SMALL
     Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
    Source:
     Type: CODEPIPELINE
     Location: https://github.com/rayabarapunaresh/poc-project-
     BuildSpec: buildspec.yml

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              Configuration:
                RepositoryName: nareshravs
                BranchName: main
              OutputArtifacts:
                - Name: AppArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: AppArtifact
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: 'CREATE_UPDATE'
                Capabilities: 'CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND'
                RoleArn: 'arn:aws:iam::882956824445:role/service-role/cwe-role-ap-southeast-1-nareshproject'
                StackName: nareshravs1
                TemplatePath: 'BuildOutput::ec2.yml'
              OutputArtifacts: []
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1 
